// src/classes/presenter/WebLarekPresenter.ts

// –ü—É—Ç–∏ –∫ –±–∞–∑–æ–≤—ã–º –∫–ª–∞—Å—Å–∞–º: –∏–∑ src/classes/presenter/ –Ω—É–∂–Ω–æ –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ src/classes/
// –∏ –ø–æ—Ç–æ–º –∑–∞–π—Ç–∏ –≤ base/
import { EventEmitter } from '../base/EventEmitter'; 

// –ü—É—Ç–∏ –∫ –∫–ª–∞—Å—Å–∞–º –º–æ–¥–µ–ª–∏: –∏–∑ src/classes/presenter/ –Ω—É–∂–Ω–æ –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ src/classes/
// –∏ –ø–æ—Ç–æ–º –∑–∞–π—Ç–∏ –≤ model/
import { AppData } from '../model/AppData'; 
import { CartService } from '../model/CartService'; 

// –ü—É—Ç–∏ –∫ View-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º: –∏–∑ src/classes/presenter/ –Ω—É–∂–Ω–æ –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ src/classes/
// –∏ –ø–æ—Ç–æ–º –∑–∞–π—Ç–∏ –≤ view/ –∏–ª–∏ common/
import { Page } from '../view/Page';
import { Card, ICardData, ICardActions } from '../view/Card';
import { Modal } from '../view/Modal'; 
import { BasketView } from '../view/BasketView';
import { OrderFormAddress } from '../view/OrderFormAddress';
import { OrderFormContacts } from '../view/OrderFormContacts';
import { SuccessView } from '../view/SuccessView';

// –ü—É—Ç–∏ –∫ —Ç–∏–ø–∞–º: –∏–∑ src/classes/presenter/ –Ω—É–∂–Ω–æ –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ src/classes/,
// –ø–æ—Ç–æ–º –µ—â–µ —Ä–∞–∑ –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ src/, –∏ –∑–∞—Ç–µ–º –∑–∞–π—Ç–∏ –≤ types/
import { IProduct, IOrderResult, IFormErrors } from '../../types/types'; 
import { IOrderFieldChangeEvent } from '../../types/events'; 

// –ü—É—Ç–∏ –∫ API-—Å–µ—Ä–≤–∏—Å—É –∏ —É—Ç–∏–ª–∏—Ç–∞–º: –∏–∑ src/classes/presenter/ –Ω—É–∂–Ω–æ –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ src/classes/,
// –∑–∞—Ç–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ–¥–Ω—è—Ç—å—Å—è –¥–æ src/, –∏ –∑–∞—Ç–µ–º –∑–∞–π—Ç–∏ –≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä) api/ –∏–ª–∏ utils/
import { LarekApi } from '../../larekApi'; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º src/larekApi.ts
import { API_URL, CDN_URL } from '../../utils/constants'; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º src/utils/constants.ts


/**
 * @class WebLarekPresenter
 * @description –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å-–ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –ª–æ–≥–∏–∫–æ–π –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "–í–µ–±-–õ–∞—Ä–µ–∫".
 * –°–≤—è–∑—ã–≤–∞–µ—Ç View-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, Model (AppData) –∏ —Å–µ—Ä–≤–∏—Å—ã.
 */
export class WebLarekPresenter {
    protected api: LarekApi; 
    protected appData: AppData;
    protected cartService: CartService;
    protected events: EventEmitter;

    // View-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    protected page: Page;
    protected modal: Modal;
    protected basketView: BasketView;
    protected orderFormAddress: OrderFormAddress;
    protected orderFormContacts: OrderFormContacts;
    protected successView: SuccessView;

    // –®–∞–±–ª–æ–Ω—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è View-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    protected cardCatalogTemplate: HTMLTemplateElement;
    protected cardPreviewTemplate: HTMLTemplateElement;
    protected basketTemplate: HTMLTemplateElement;
    protected orderTemplate: HTMLTemplateElement;
    protected contactsTemplate: HTMLTemplateElement;
    protected successTemplate: HTMLTemplateElement;

    constructor() {
        // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∏ API ---
        this.events = new EventEmitter();
        this.api = new LarekApi(CDN_URL, API_URL); 
        this.appData = new AppData(this.events); 
        this.cartService = new CartService(this.appData, this.events); 

        // --- –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ (–¥–µ–ª–∞–µ–º –∏—Ö non-null —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º !) ---
        this.cardCatalogTemplate = document.querySelector<HTMLTemplateElement>('#card-catalog')!;
        this.cardPreviewTemplate = document.querySelector<HTMLTemplateElement>('#card-preview')!;
        this.basketTemplate = document.querySelector<HTMLTemplateElement>('#basket')!;
        this.orderTemplate = document.querySelector<HTMLTemplateElement>('#order')!;
        this.contactsTemplate = document.querySelector<HTMLTemplateElement>('#contacts')!;
        this.successTemplate = document.querySelector<HTMLTemplateElement>('#success')!;

        // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è View-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (—Ç–∞–∫–∂–µ –¥–µ–ª–∞–µ–º non-null —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤) ---
        this.page = new Page(document.body, this.events);
        this.modal = new Modal(document.getElementById('modal-container') as HTMLElement, this.events); 
        this.basketView = new BasketView(this.basketTemplate, this.events);
        this.orderFormAddress = new OrderFormAddress(this.orderTemplate, this.events);
        this.orderFormContacts = new OrderFormContacts(this.contactsTemplate, this.events);
        this.successView = new SuccessView(this.successTemplate, this.events);

        // --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π (–æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ü—Ä–µ–∑–µ–Ω—Ç–µ—Ä–∞) ---

        // 1. –°–æ–±—ã—Ç–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
        this.events.on('items:changed', (data: { catalog: IProduct[] }) => {
            this.page.catalog = data.catalog.map(item => {
                // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
                const cardData: ICardData = {
                    ...item, // –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ IProduct
                    buttonText: item.price === null ? '–ë–µ—Å—Ü–µ–Ω–Ω–æ' : '–í –∫–æ—Ä–∑–∏–Ω—É',
                    buttonDisabled: item.price === null,
                    description: undefined, // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞
                    index: undefined
                };

                // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
                const card = new Card(this.cardCatalogTemplate, this.events, {
                    onClick: () => this.events.emit('card:select', { id: item.id })
                });
                return card.render(cardData);
            });
        });

        this.events.on('card:select', (data: { id: string }) => {
            const product = this.appData.getProduct(data.id);
            if (product) {
                this.appData.setPreview(product.id);
                // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                const cardData: ICardData = {
                    ...product,
                    description: product.description, // –û–ø–∏—Å–∞–Ω–∏–µ –µ—Å—Ç—å –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ
                    buttonText: product.price === null ? '–ë–µ—Å—Ü–µ–Ω–Ω–æ' : '–í –∫–æ—Ä–∑–∏–Ω—É',
                    buttonDisabled: product.price === null,
                    index: undefined
                };

                const previewCard = new Card(this.cardPreviewTemplate, this.events, {
                    onButtonClick: () => this.events.emit('preview:addToBasket', { id: product.id })
                });
                this.modal.render({ content: previewCard.render(cardData) });
            }
        });

        // 2. –°–æ–±—ã—Ç–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ—Ä–∑–∏–Ω–æ–π
        this.events.on('basket:open', () => {
            const basketItems = this.cartService.getCartItems();
            const basketElements = basketItems.map((item, index) => {
                // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ
                const cardData: ICardData = {
                    ...item,
                    index: index + 1, // –ò–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ (–Ω–∞—á–∏–Ω–∞–µ–º —Å 1)
                    buttonText: '–£–¥–∞–ª–∏—Ç—å',
                    buttonDisabled: false, // –ö–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å" –≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–Ω–∞
                    description: undefined // –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω—É–∂–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ
                };

                // –î–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–ª–∏ —Å–≤–æ–π —à–∞–±–ª–æ–Ω basket-card
                const card = new Card(this.cardCatalogTemplate, this.events, {
                    onButtonClick: () => this.events.emit('basket:removeFromBasket', { id: item.id })
                });
                return card.render(cardData);
            });
            this.modal.render({ content: this.basketView.render({ items: basketElements, total: this.cartService.getCartTotal() }) });
        });

        this.events.on('basket:changed', () => {
            const basketItems = this.cartService.getCartItems();
            const basketElements = basketItems.map((item, index) => {
                const cardData: ICardData = {
                    ...item,
                    index: index + 1,
                    buttonText: '–£–¥–∞–ª–∏—Ç—å',
                    buttonDisabled: false,
                    description: undefined
                };
                const card = new Card(this.cardCatalogTemplate, this.events, {
                    onButtonClick: () => this.events.emit('basket:removeFromBasket', { id: item.id })
                });
                return card.render(cardData);
            });

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –¥–æ–ª–∂–Ω–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –±—ã—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞
            const isBasketEmpty = basketItems.length === 0;

            this.basketView.render({
                items: basketElements,
                total: this.cartService.getCartTotal(),
                // üëá –í–æ—Ç –∑–¥–µ—Å—å –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ data
                buttonDisabled: isBasketEmpty, 
                buttonText: isBasketEmpty ? '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞' : '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑' 
            });
            
            this.page.counter = this.cartService.getCartItemCount();
        });




        // 3. –°–æ–±—ã—Ç–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ñ–æ—Ä–º–æ–π –∑–∞–∫–∞–∑–∞
        this.events.on('basket:order', () => {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ñ–æ—Ä–º–æ–π –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞ –∑–∞–∫–∞–∑–∞
            this.modal.render({
                content: this.orderFormAddress.render({
                    address: this.appData.order.address,
                    payment: this.appData.order.payment,
                    errors: this.appData.formErrors // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã
                })
            });

            this.appData.order.items = this.appData.getBasketItemsIds();
            this.appData.order.total = this.appData.getBasketTotal(); 
        });

        this.events.on('order:addressInput', (data: IOrderFieldChangeEvent) => {
            this.appData.setOrderField(data.field, data.value);
        });

        this.events.on('order:submit', () => {
            // –°–Ω–∞—á–∞–ª–∞ –≤—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É AppData
            if (this.appData.validateOrder()) { 
                // –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                this.modal.render({
                    content: this.orderFormContacts.render({
                        // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–µ–π –∏ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                        email: this.appData.order.email,
                        phone: this.appData.order.phone,
                        errors: this.appData.formErrors// –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç IFormErrors
                    })
                });
            } else {
                this.orderFormAddress.errors = this.appData.formErrors; 
            }
        });

        this.events.on('order:contactsInput', (data: IOrderFieldChangeEvent) => {
            this.appData.setOrderField(data.field, data.value);
        });

        this.events.on('formErrors:changed', (errors: IFormErrors) => {
            const { address, payment, email, phone } = errors;
            this.orderFormAddress.errors = errors; 
            this.orderFormAddress.valid = !address && !payment; 
            this.orderFormContacts.errors = errors;
            this.orderFormContacts.valid = !email && !phone; 
        });

        this.events.on('order:success', async () => {
            if (this.appData.validateOrder()) { 
                try {
                    // –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                    const orderResult: IOrderResult = await this.api.post('/order', this.appData.order);

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
                    this.modal.render({ content: this.successView.render({ total: orderResult.total }) });

                    // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
                    this.cartService.clearCart(); 
                    this.appData.resetOrder();

                } catch (error) {
                    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
                    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
                }
            } else {
                this.orderFormContacts.errors = this.appData.formErrors; 
            }
        });

        // 4. –°–æ–±—ã—Ç–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–∫–Ω–æ–º —É—Å–ø–µ—Ö–∞
        this.events.on('success:close', () => {
            this.modal.close(); 
        });

        // --- –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
        this.api.get('/products')
            .then((data: { items: IProduct[] }) => {
                this.appData.setCatalog(data.items); 
            })
            .catch(err => {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞:', err);
            });
    }
}